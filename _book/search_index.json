[["index.html", "Genomic Data Analysis Course Exercises Chapter 1 About 1.1 Usage 1.2 Render book 1.3 Preview book", " Genomic Data Analysis Course Exercises Carson Stacy 2023-10-26 Chapter 1 About This is a compilation of exercises created for a graduate level course in Genomic Data Analysis at the University of Arkansas. 1.1 Usage Each bookdown chapter is an .Rmd file, and each .Rmd file can contain one (and only one) chapter. A chapter must start with a first-level heading: # A good chapter, and can contain one (and only one) first-level heading. Use second-level and higher headings within chapters like: ## A short section or ### An even shorter section. The index.Rmd file is required, and is also your first book chapter. It will be the homepage when you render the book. 1.2 Render book You can render the HTML version of this example book without changing anything: Find the Build pane in the RStudio IDE, and Click on Build Book, then select your output format, or select “All formats” if you’d like to use multiple formats from the same book source files. Or build the book from the R console: bookdown::render_book() To render this example to PDF as a bookdown::pdf_book, you’ll need to install XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. 1.3 Preview book As you work, you may start a local server to live preview this HTML book. This preview will update as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in “Preview book”, or from the R console: bookdown::serve_book() "],["getting-started-in-r.html", "Chapter 2 Getting Started in R 2.1 Installing Packages 2.2 Exercise Description 2.3 Learning outcomes 2.4 Using R and RStudio 2.5 Load data directly from the URL 2.6 Working with data in R 2.7 Looking at Data in RStudio 2.8 Exploring the data", " Chapter 2 Getting Started in R last updated: 2023-10-26 2.1 Installing Packages First things first: Click the “Visual” button in the top-left corner of the code box. This makes the code look more like a word processor. You can always switch back to Source anytime you prefer. The following code installs a set of R packages used in this document – if not already installed – and then loads the packages into R. Note that we utilize the US CRAN repository, but other repositories may be more convenient according to geographic location. if (!require(&quot;pacman&quot;)) install.packages(&quot;pacman&quot;); library(pacman) # the p_load function # A) installs the package if not installed (like install.packages(&quot;package_name&quot;)), # B) loads the package (equivalent of library(package_name)) p_load(&quot;tidyverse&quot;, # An ecosystem of packages for making life in R easier &quot;here&quot;, # For locating files easily &quot;knitr&quot;, # For generating (&quot;knitting&quot;) html or pdf files from .Rmd file &quot;readr&quot;, # For faster and easier reading in files to R &quot;pander&quot;, # For session info at the end of the document &quot;BiocManager&quot;, # For installing Bioconductor R packages &quot;dplyr&quot; # A key part of the tidyverse ecosystem, has useful functions ) 2.2 Exercise Description This activity is intended to familiarize you with using RStudio and the R ecosystem to analyze genomic data 2.3 Learning outcomes At the end of this exercise, you should be able to: open, modify, and knit an Rmd file to a pdf/html output relate Rmarkdown to a traditional lab notebook run commands in an Rmarkdown file 2.4 Using R and RStudio This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: # print a statement print(&quot;R code in a .Rmd chunk works just like a script&quot;) ## [1] &quot;R code in a .Rmd chunk works just like a script&quot; # preform basic calculations 2+2 ## [1] 4 R is a useful tool for analyzing data. Let’s download a data file from GitHub to work with. First, we will download the file manually and open it. Later, we will download the same file directly from the url. Click here to open the file in GitHub and click the download icon to download it to your computer. Use the “Import Dataset” in the Environment panel of RStudio to open the file browser and select the downloaded file You’ll want to use the “From text (readr)…” option Adjust settings to make sure the file loads in properly. Copy the code that the Import Dataset feature provides for reading in the file and paste it in the code chunk below # insert here the code used to load the file in from your computer 2.5 Load data directly from the URL Rather than downloading the file manually and then loading it in from where we downloaded it to, we can just load it directly from the URL, as shown below. A word of caution, this won’t work with any URL and you can’t guarantee the URL will always work in the future. # assign url to a variable DE_data_url &lt;- &quot;https://raw.githubusercontent.com/clstacy/GenomicDataAnalysis_Fa23/main/data/ethanol_stress/msn2-4_mutants_EtOH.txt&quot; # download the data from the web DE_results_msn24_EtOH &lt;- read_tsv(file=DE_data_url) ## Warning: One or more parsing issues, call `problems()` on your data frame for details, ## e.g.: ## dat &lt;- vroom(...) ## problems(dat) ## Rows: 5756 Columns: 18 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;\\t&quot; ## chr (3): Gene ID, Common Name, Annotation ## dbl (15): logFC: YPS606 (WT) EtOH response, Pvalue: YPS606 (WT) EtOH respons... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. Do remember that this function uses the package readr (a part of the tidyverse package we loaded above). If you don’t have that package (1) installed and (2) loaded into your script, it won’t work. Thankfully, the p_load function takes care of both of these simultaneously. 2.6 Working with data in R To get a quick summary of our data and how it looks # take a quick look at how the data is structured glimpse(DE_results_msn24_EtOH) ## Rows: 5,756 ## Columns: 18 ## $ `Gene ID` &lt;chr&gt; &quot;YMR105C&quot;, &quot;YML100W&quot;, &quot;YER053… ## $ `Common Name` &lt;chr&gt; &quot;PGM2&quot;, &quot;TSL1&quot;, &quot;PIC2&quot;, &quot;NCE1… ## $ Annotation &lt;chr&gt; &quot;Phosphoglucomutase&quot;, &quot;Large … ## $ `logFC: YPS606 (WT) EtOH response` &lt;dbl&gt; 7.5999973, 7.7618280, 6.69400… ## $ `Pvalue: YPS606 (WT) EtOH response` &lt;dbl&gt; 9.40e-38, 1.04e-35, 3.03e-39,… ## $ `FDR: YPS606 (WT) EtOH response` &lt;dbl&gt; 3.26e-35, 1.54e-33, 2.07e-36,… ## $ `logFC: YPS606 msn2/4ΔΔ EtOH response` &lt;dbl&gt; 0.78481798, 0.60949852, 1.735… ## $ `Pvalue: YPS606 msn2/4ΔΔ EtOH response` &lt;dbl&gt; 3.430000e-06, 8.401730e-04, 4… ## $ `FDR: YPS606 msn2/4ΔΔ EtOH response` &lt;dbl&gt; 7.420000e-06, 1.398507e-03, 2… ## $ `logFC: WT v msn2/4ΔΔ: EtOH response` &lt;dbl&gt; -6.815179, -7.152329, -4.9580… ## $ `Pvalue: WT v msn2/4ΔΔ: EtOH response` &lt;dbl&gt; 6.34e-32, 2.53e-30, 1.35e-27,… ## $ `FDR: WT v msn2/4ΔΔ: EtOH response` &lt;dbl&gt; 3.65e-28, 7.28e-27, 2.59e-24,… ## $ `logFC: WT v msn2/4ΔΔ: unstressed` &lt;dbl&gt; -0.144061475, -0.365016862, -… ## $ `Pvalue: WT v msn2/4ΔΔ: unstressed` &lt;dbl&gt; 0.350436027, 0.041423492, 0.4… ## $ `FDR: WT v msn2/4ΔΔ:unstressed` &lt;dbl&gt; 0.998531082, 0.998531082, 0.9… ## $ `logFC: WT v msn2/4ΔΔ: EtOH absolute` &lt;dbl&gt; -6.959241, -7.517346, -5.0845… ## $ `Pvalue: WT v msn2/4ΔΔ: EtOH absolute` &lt;dbl&gt; 8.55e-37, 2.04e-35, 3.06e-36,… ## $ `FDR: WT v msn2/4ΔΔ: EtOH absolute` &lt;dbl&gt; 1.64e-33, 1.96e-32, 3.52e-33,… We see in the output there are 5756 rows and 18 columns in the data. The same information should be available in the environment panel of RStudio 2.7 Looking at Data in RStudio If we want to take a closer look at the data, we have a few options. To see just the first few lines we can run the following command: head(DE_results_msn24_EtOH) ## # A tibble: 6 × 18 ## `Gene ID` `Common Name` Annotation logFC: YPS606 (WT) E…¹ ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 YMR105C PGM2 Phosphoglucomutase 7.60 ## 2 YML100W TSL1 Large subunit of trehalose 6-p… 7.76 ## 3 YER053C PIC2 Mitochondrial copper and phosp… 6.69 ## 4 YPR149W NCE102 Protein involved in regulation… 0.714 ## 5 YKL035W UGP1 UDP-glucose pyrophosphorylase … 4.42 ## 6 YLR258W GSY2 Glycogen synthase 7.52 ## # ℹ abbreviated name: ¹​`logFC: YPS606 (WT) EtOH response` ## # ℹ 14 more variables: `Pvalue: YPS606 (WT) EtOH response` &lt;dbl&gt;, ## # `FDR: YPS606 (WT) EtOH response` &lt;dbl&gt;, ## # `logFC: YPS606 msn2/4ΔΔ EtOH response` &lt;dbl&gt;, ## # `Pvalue: YPS606 msn2/4ΔΔ EtOH response` &lt;dbl&gt;, ## # `FDR: YPS606 msn2/4ΔΔ EtOH response` &lt;dbl&gt;, ## # `logFC: WT v msn2/4ΔΔ: EtOH response` &lt;dbl&gt;, … This can be difficult to look at. For looking at data similar to an Excel file, RStudio allows this by clicking on the name of the data.frame in the top right corner of the IDE. We can also view a file by typing View(filename). To open the data in a new window, click the “pop out” button next to “filter” just above the opened dataset. 2.8 Exploring the data This dataset includes the log fold changes of gene expression in an experiment testing the ethanol stress response for the YPS606 strain of S. cerevisiae and an msn2/4ΔΔ mutant. There are also additional columns of metadata about each gene. In later classes, we will cover the details included, but we can already start answering questions. Using RStudio, answer the following questions: How many genes are included in this study? Which gene has the highest log fold change in the msn2/4ΔΔ mutant EtOH response? How many HSP genes are differentially expressed (FDR &lt; 0.01) in unstressed conditions for the mutant? Do the genes with the largest magnitude fold changes have the smallest p-values? Which isoform of phosphoglucomutase is upregulated in response to ethanol stress? Do you think msn2/4 is responsible for this difference? Be sure to knit this file into a pdf or html file once you’re finished. System information for reproducibility: pander::pander(sessionInfo()) R version 4.3.1 (2023-06-16) Platform: aarch64-apple-darwin20 (64-bit) locale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8 attached base packages: stats, graphics, grDevices, utils, datasets, methods and base other attached packages: BiocManager(v.1.30.22), pander(v.0.6.5), knitr(v.1.44), here(v.1.0.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.0), dplyr(v.1.1.3), purrr(v.1.0.2), readr(v.2.1.4), tidyr(v.1.3.0), tibble(v.3.2.1), ggplot2(v.3.4.4), tidyverse(v.2.0.0) and pacman(v.0.5.1) loaded via a namespace (and not attached): sass(v.0.4.7), utf8(v.1.2.3), generics(v.0.1.3), stringi(v.1.7.12), hms(v.1.1.3), digest(v.0.6.33), magrittr(v.2.0.3), evaluate(v.0.22), grid(v.4.3.1), timechange(v.0.2.0), bookdown(v.0.36), fastmap(v.1.1.1), rprojroot(v.2.0.3), jsonlite(v.1.8.7), fansi(v.1.0.5), scales(v.1.2.1), codetools(v.0.2-19), jquerylib(v.0.1.4), cli(v.3.6.1), crayon(v.1.5.2), rlang(v.1.1.1), bit64(v.4.0.5), munsell(v.0.5.0), withr(v.2.5.1), cachem(v.1.0.8), yaml(v.2.3.7), parallel(v.4.3.1), tools(v.4.3.1), tzdb(v.0.4.0), colorspace(v.2.1-0), curl(v.5.1.0), vctrs(v.0.6.4), R6(v.2.5.1), lifecycle(v.1.0.3), bit(v.4.0.5), vroom(v.1.6.4), pkgconfig(v.2.0.3), pillar(v.1.9.0), bslib(v.0.5.1), gtable(v.0.3.4), glue(v.1.6.2), Rcpp(v.1.0.11), xfun(v.0.40), tidyselect(v.1.2.0), rstudioapi(v.0.15.0), htmltools(v.0.5.6.1), rmarkdown(v.2.25) and compiler(v.4.3.1) "],["gene-ontology.html", "Chapter 3 Gene Ontology 3.1 Installing Packages 3.2 Description 3.3 Learning outcomes 3.4 Analysis Workflow 3.5 Get DE gene list 3.6 The Hypergeometric Distribution in practice 3.7 Now it is your turn 3.8 Questions", " Chapter 3 Gene Ontology last updated: 2023-10-26 3.1 Installing Packages The following code installs all of the packages used in this document – if not already installed – and then loads the packages into R. We need to install packages specific to our gene ontology bioinformatic analysis. Many of these packages aren’t available on the R CRAN package repository, instead they are hosted on BioConductor repository that is focused on packages used in biological research. Today, we need to install the package clusterProfiler with the code below. The p_load() function will check the bioconductor repository if the package isn’t on CRAN if (!require(&quot;pacman&quot;)) install.packages(&quot;pacman&quot;); library(pacman) p_load(&quot;tidyverse&quot;, &quot;here&quot;, &quot;knitr&quot;, &quot;dplyr&quot;, # already downloaded last activity &quot;readr&quot;,&quot;pander&quot;, &quot;BiocManager&quot;, # also from last activity &quot;janitor&quot;, # for cleaning column names &quot;igraph&quot;, &quot;tidytree&quot;, # dependencies that require explicit download on latest Mac OS &quot;ggVennDiagram&quot;, # visualization venn diagram &quot;clusterProfiler&quot;, # for GO enrichment &quot;AnnotationDbi&quot;, # database of common genome annotations &quot;org.Sc.sgd.db&quot; # annotation database for S. cerevesiae ) library(dplyr) 3.2 Description This activity is intended to familiarize you with Gene Ontology analysis and some of the unique challenges that come from working with bioinformatic data. 3.3 Learning outcomes At the end of this exercise, you should be able to: Understand gene ontology and its significance in functional annotation learn to perform a GO enrichment &amp; appropriate statistical methods (hypergeometric &amp; Fisher’s exact test) for the enrichment analysis interpret &amp; critically evaluate the results of GO enrichment &amp; limitations/challenges # we don&#39;t have to run this, but if you install without pacman, we have to do load libraries library(clusterProfiler) library(org.Sc.sgd.db) 3.4 Analysis Workflow Let’s use the same file from last class, this time performing GO term enrichment # assign url to a variable DE_data_url &lt;- &quot;https://raw.githubusercontent.com/clstacy/GenomicDataAnalysis_Fa23/main/data/ethanol_stress/msn2-4_mutants_EtOH.txt&quot; # download the data from the web DE_results_msn24_EtOH &lt;- read_tsv(file=DE_data_url) ## Warning: One or more parsing issues, call `problems()` on your data frame for details, ## e.g.: ## dat &lt;- vroom(...) ## problems(dat) ## Rows: 5756 Columns: 18 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;\\t&quot; ## chr (3): Gene ID, Common Name, Annotation ## dbl (15): logFC: YPS606 (WT) EtOH response, Pvalue: YPS606 (WT) EtOH respons... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. msn24_EtOH &lt;- # assign a new object name DE_results_msn24_EtOH |&gt; # our object with messy names clean_names() # function from janitor package to make names consistent 3.5 Get DE gene list We need a list of deferentially expressed genes to test for over or under enrichment of terms. Here we choose genes with significantly (FDR&lt;0.05) higher expression (log2-fold change (logFC) greater than 1) in the msn2/4ΔΔ mutant’s EtOH response compared to the wild-type strains EtOH response (positive values in the logFC column of WT vs msn2/4ΔΔ: EtOH response). # subset to just genes with significant fdr &amp; log2FC&gt;1 msn24_EtOH |&gt; filter(log_fc_wt_v_msn2_4dd_et_oh_response &gt; 1 &amp; fdr_wt_v_msn2_4dd_et_oh_response &lt; 0.05) ## # A tibble: 94 × 18 ## gene_id common_name annotation log_fc_yps606_wt_et_…¹ pvalue_yps606_wt_et_…² ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 YOR315W SFG1 Putative … -5.52 4.33e-31 ## 2 YFL051C YFL051C &lt;NA&gt; -4.54 6.37e-27 ## 3 YMR016C SOK2 Nuclear p… -3.09 1.32e-32 ## 4 YPL061W ALD6 Cytosolic… -7.04 4.96e-26 ## 5 YER073W ALD5 Mitochond… -1.88 6.14e-17 ## 6 YBL005W… YBL005W-B Retrotran… 1.91 5.46e-13 ## 7 YBL039C URA7 Major CTP… -6.95 3.62e-41 ## 8 YJL050W MTR4 RNA duple… -4.59 4.73e-36 ## 9 YMR241W YHM2 Citrate a… -1.72 1.72e-20 ## 10 YIL131C FKH1 Forkhead … -2.20 1.23e-27 ## # ℹ 84 more rows ## # ℹ abbreviated names: ¹​log_fc_yps606_wt_et_oh_response, ## # ²​pvalue_yps606_wt_et_oh_response ## # ℹ 13 more variables: fdr_yps606_wt_et_oh_response &lt;dbl&gt;, ## # log_fc_yps606_msn2_4dd_et_oh_response &lt;dbl&gt;, ## # pvalue_yps606_msn2_4dd_et_oh_response &lt;dbl&gt;, ## # fdr_yps606_msn2_4dd_et_oh_response &lt;dbl&gt;, … # the above command gave us what we want, here it is again but saved to a new variable: DE_genes_upregulated_msn24_EtOH &lt;- msn24_EtOH |&gt; filter(log_fc_wt_v_msn2_4dd_et_oh_response &gt; 1 &amp; fdr_wt_v_msn2_4dd_et_oh_response &lt; 0.05) |&gt; pull(gene_id) # get just the gene names Now we have a list of genes (saved as DE_genes_upregulated_msn24_EtOH) that we want to perform GO term enrichment on. Let’s do that now, using the clusterProfiler package’s enrichGO function GO_msn24_EtOH_up_results &lt;- enrichGO( gene = DE_genes_upregulated_msn24_EtOH, OrgDb = &quot;org.Sc.sgd.db&quot;, universe = msn24_EtOH$gene_id, keyType = &quot;ORF&quot;, ont= &quot;BP&quot; ) |&gt; # let&#39;s add a &#39;richFactor&#39; column that gives us the proportion of genes DE in the term mutate(richFactor = Count / as.numeric(sub(&quot;/\\\\d+&quot;, &quot;&quot;, BgRatio))) Now, we can look at the results in table form. # open up the results in a data frame to examine GO_msn24_EtOH_up_results |&gt; as_tibble() |&gt; View() # Here is how we could write this result into a text file: GO_msn24_EtOH_up_results |&gt; as_tibble() |&gt; write_tsv(file = &quot;~/Desktop/GO_msn24_EtOH_up_results.tsv&quot;) Now we can visualize the enrichment results, which shows us gene ontology categories that are enriched in genes with higher expression (upregulated) in the WT vs msn2/4ΔΔ: EtOH response. # a simple visualization plot(barplot(GO_msn24_EtOH_up_results, showCategory = 10)) # a more complicated visualization, with more information density ggplot(GO_msn24_EtOH_up_results, showCategory = 15, aes(richFactor, fct_reorder(Description, richFactor))) + geom_segment(aes(xend = 0, yend = Description)) + geom_point(aes(color = p.adjust, size = Count)) + scale_color_gradientn( colours = c(&quot;#f7ca64&quot;, &quot;#46bac2&quot;, &quot;#7e62a3&quot;), trans = &quot;log10&quot;, guide = guide_colorbar(reverse = TRUE, order = 1) ) + scale_size_continuous(range = c(2, 10)) + xlab(&quot;Rich Factor&quot;) + ylab(NULL) + ggtitle(&quot;Biological Processes&quot;) + theme_bw() You can try adjusting the size of the output figures by clicking the gear icon in the top right of the code chunk and click “use custom figure size”. Note this updates the chunk header so the change is saved. 3.5.1 Saving ggplot output to a file We usually want to save our visualizations for later. When plotting with the ggplot package, there is an easy way to do this. See below: # First, let&#39;s create a folder to save our visualizations dir_visualization &lt;- path.expand(&quot;~/Desktop/Genomic_Data_Analysis/Visualization/&quot;) if (!dir.exists(dir_visualization)) {dir.create(dir_visualization, recursive = TRUE)} # type ?ggsave in the console for more information via the help page. ggsave( &quot;GO_BP_msn24_EtOH_up_results_lollipopPlot.pdf&quot;, # if we don&#39;t need the image to go to a certain spot, we only need the file name above. plot = last_plot(), # either the last plot, or name of a ggplot object you&#39;ve saved. device = &quot;pdf&quot;, #Can be &quot;png&quot;, &quot;eps&quot;, &quot;ps&quot;, &quot;tex&quot; (pictex), &quot;pdf&quot;, &quot;jpeg&quot;, &quot;tiff&quot;, &quot;png&quot;, &quot;bmp&quot;, &quot;svg&quot; or &quot;wmf&quot; (windows only). # note that pdf, eps, svg are vector/line art, so zooming doesn&#39;t pixelate. path = dir_visualization, # Path of the directory to save plot to. defaults to work dir. scale = 2, # multiplicative scaling factor width = 12, height = 8, units = &quot;cm&quot;, # must be one of: &quot;in&quot;, &quot;cm&quot;, &quot;mm&quot;, &quot;px&quot; dpi = 300, # adjusting this larger gives higher quality plot, making a larger file. limitsize = TRUE, # prevents accidentally making it massive, defaults to TRUE bg = NULL # Background colour. If NULL, uses the plot.background fill value from the plot theme. ) Recall that when we knit this Rmarkdown notebook, we keep a copy of the plots/images there as well, in the same place as the code and analysis used to generate it. However, we may want a higher resolution file of just the image, or the image in a different format. In this case, saving the plot is a useful option for us. The journal Science has the following recommendations: “We prefer prefer ai, eps, pdf, layered psd, tif, and jpeg files. …minimum file resolution of 300 dpi.” 3.6 The Hypergeometric Distribution in practice Notice that the DNA integration process does not have very many genes in the category, but they appear to be highly present in the the upregulated gene list. Specifically, DE genes have this GO term, where in the entire genome, there are only genes. What are the odds that we see this by random chance? let’s do the math: # number of genes that have GO:0015074 (DNA integration) integration_genes = 23 # number of genes that are DE (msn2/4 EtOH response, logFC&gt;1) DE_genes = 91 # number of genes that are both DE and DNA integration genes Overlap = 6 # total number of genes in experiment total = 5538 # number of genes in genome Without doing the math, do you expect these to be underrepresented, overrepresented, or neither? # test for underrepresentation (depletion) phyper(q = Overlap, # number of integration genes that were DE m = DE_genes, # number of DE genes n = total-DE_genes, # number of non DE genes k = integration_genes, # number of observed DE DNA integration genes lower.tail = TRUE) # the probability that X &lt;= x ## [1] 0.9999999 # test for overrepresentation (enrichmen t) phyper(q = Overlap-1, # number of integration genes that were DE # we subtract 1 b/c of lower.tail=FALSE means greater than # without equality, so have to do one less m = DE_genes, # number of DE genes n = total-DE_genes, # number of non DE genes k = integration_genes, # number of observed DE integration genes lower.tail = FALSE) # the probability that X &gt; x ## [1] 1.344447e-06 As we see, there is strong evidence that the number of genes with this GO term is unlikely to be seen due to chance. In layman’s terms, this GO term is enriched in upregulated genes in this contrast. The test for underrepresenation shows there is no support for a hypothesis that this gene is underrepresented in the DE gene list. Interestingly, the hypergeometric distribution is the same thing as the Fisher’s Exact test, so we can rerun the same tests above with a different command: #fisher test for underrepresentation fisher.test(matrix(c(Overlap, DE_genes-Overlap, integration_genes-Overlap, total-DE_genes-integration_genes + Overlap), 2, 2), alternative=&#39;less&#39;)$p.value ## [1] 0.9999999 #fisher test for overrepresentation fisher.test(matrix(c(Overlap, DE_genes-Overlap, integration_genes-Overlap, total-DE_genes-integration_genes + Overlap), 2, 2), alternative=&#39;greater&#39;)$p.value ## [1] 1.344447e-06 How does the p-value that we get from this test compare to the results table? They should match. 3.7 Now it is your turn Try running your own GO enrichment with a different gene list. Some options could be: Start with the WT vs msn2/4ΔΔ: EtOH response again, and this time change to “downregulated” (i.e., genes with higher expression in the wild-type strain compared to the msn2/4ΔΔ mutant). These would potentially include genes with defective induction. See what happens when you change the FDR threshold from a liberal one (0.05) to a more conservative one (0.01). Try different logFC cutoffs. Look at different comparisons in the data file (there are 5 total) Look at a different GO category (we only looked at BP, not MF or CC) Advanced: include multiple filters (e.g., genes upregulated by EtOH stress in the WT strain that ALSO have defective induction during ethanol stress in the msn2/4ΔΔ mutant). The code below is a template for you to modify to complete this activity. The example code below looks at the downregulated genes in response to stress in the WT (choose something else for your gene list) # subset to just genes meeting your requirements DE_genes_GIVE_NAME &lt;- msn24_EtOH |&gt; # change the below line for the filters that you want filter(log_fc_yps606_wt_et_oh_response &lt; 1 &amp; pvalue_yps606_wt_et_oh_response&lt;0.05) |&gt; pull(gene_id) # grabbing just the gene names 3.7.1 Run Enrichment GO_GIVE_NAME_results &lt;- enrichGO( gene = DE_genes_GIVE_NAME, OrgDb = &quot;org.Sc.sgd.db&quot;, universe = msn24_EtOH$gene_id, keyType = &quot;ORF&quot;, ont= &quot;BP&quot; ) |&gt; mutate(richFactor = Count / as.numeric(sub(&quot;/\\\\d+&quot;, &quot;&quot;, BgRatio))) 3.7.2 see the data # open up the results in a data frame to examine GO_GIVE_NAME_results |&gt; as_tibble() |&gt; View() # write out your results to a text file GO_GIVE_NAME_results |&gt; as_tibble() |&gt; write_tsv(file = &quot;~/Desktop/GO_GIVE_NAME_DIRECTION_results.tsv&quot;) 3.7.3 create plots # a simple visualization plot(barplot(GO_GIVE_NAME_results, showCategory = 10)) # built in visualization with dots instead dotplot(GO_GIVE_NAME_results, showCategory=10) # a more complicated visualization, with more information density ggplot(GO_GIVE_NAME_results, showCategory = 15, aes(richFactor, fct_reorder(Description, richFactor))) + geom_segment(aes(xend = 0, yend = Description)) + geom_point(aes(color = p.adjust, size = Count)) + scale_color_gradientn( colours = c(&quot;#f7ca64&quot;, &quot;#46bac2&quot;, &quot;#7e62a3&quot;), trans = &quot;log10&quot;, guide = guide_colorbar(reverse = TRUE, order = 1) ) + scale_size_continuous(range = c(2, 10)) + scale_y_discrete(label = function(x) stringr::str_trunc(x, 50)) + # cut off long names xlab(&quot;Rich Factor&quot;) + ylab(NULL) + ggtitle(&quot;Biological Processes&quot;) + theme_bw() 3.8 Questions Answer the following questions: Which GO term had the smallest adjusted p-value in the upregulated comparison example that we did together? What percent of the genes would we expect to have that GO term in the DE list under the null hypothesis? What percent of the DE genes actually had that GO term? For the upregulated comparision, what GO terms are enriched for genes with pval &lt; 0.01 but fdr &gt; 0.01 and what is their average/median log fold change? For one of your own novel comparisons, explain what comparison you were interested in, and your rationale for the cutoffs you chose for your gene list. For that novel gene list you chose for yourself, which GO term had the smallest adjusted p-value? In simple terms, how would you describe what the “Rich Factor” tells about a given GO term in the gene list. Challenge: create a venn diagram of the GO terms in the GO analysis you ran comparing to the upregulated comparison example. # create a list of the data we want to compare GO_results_list &lt;- list(data.frame(GO_msn24_EtOH_up_results)$ID, data.frame(GO_GIVE_NAME_results)$ID) # visualize the GO results list as a venn diagram ggVennDiagram(GO_results_list, category.names = c(&quot;msn24_EtOH_upregulated&quot;, &quot;[GIVE_NAME]&quot;)) + scale_x_continuous(expand = expansion(mult = .2)) + scale_fill_distiller(palette = &quot;RdBu&quot; ) Be sure to knit this file into a pdf or html file once you’re finished. System information for reproducibility: pander::pander(sessionInfo()) R version 4.3.1 (2023-06-16) Platform: aarch64-apple-darwin20 (64-bit) locale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8 attached base packages: stats4, stats, graphics, grDevices, utils, datasets, methods and base other attached packages: org.Sc.sgd.db(v.3.17.0), AnnotationDbi(v.1.62.2), IRanges(v.2.34.1), S4Vectors(v.0.38.2), Biobase(v.2.60.0), BiocGenerics(v.0.46.0), clusterProfiler(v.4.8.2), ggVennDiagram(v.1.2.3), tidytree(v.0.4.5), igraph(v.1.5.1), janitor(v.2.2.0), BiocManager(v.1.30.22), pander(v.0.6.5), knitr(v.1.44), here(v.1.0.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.0), dplyr(v.1.1.3), purrr(v.1.0.2), readr(v.2.1.4), tidyr(v.1.3.0), tibble(v.3.2.1), ggplot2(v.3.4.4), tidyverse(v.2.0.0) and pacman(v.0.5.1) loaded via a namespace (and not attached): RColorBrewer(v.1.1-3), rstudioapi(v.0.15.0), jsonlite(v.1.8.7), magrittr(v.2.0.3), farver(v.2.1.1), rmarkdown(v.2.25), ragg(v.1.2.6), fs(v.1.6.3), zlibbioc(v.1.46.0), vctrs(v.0.6.4), memoise(v.2.0.1), RCurl(v.1.98-1.12), ggtree(v.3.8.2), htmltools(v.0.5.6.1), curl(v.5.1.0), gridGraphics(v.0.5-1), sass(v.0.4.7), KernSmooth(v.2.23-22), bslib(v.0.5.1), plyr(v.1.8.9), cachem(v.1.0.8), lifecycle(v.1.0.3), pkgconfig(v.2.0.3), Matrix(v.1.6-1.1), R6(v.2.5.1), fastmap(v.1.1.1), gson(v.0.1.0), GenomeInfoDbData(v.1.2.10), snakecase(v.0.11.1), digest(v.0.6.33), aplot(v.0.2.2), enrichplot(v.1.20.0), colorspace(v.2.1-0), patchwork(v.1.1.3), rprojroot(v.2.0.3), textshaping(v.0.3.7), RSQLite(v.2.3.1), labeling(v.0.4.3), fansi(v.1.0.5), timechange(v.0.2.0), httr(v.1.4.7), polyclip(v.1.10-6), compiler(v.4.3.1), proxy(v.0.4-27), bit64(v.4.0.5), withr(v.2.5.1), downloader(v.0.4), BiocParallel(v.1.34.2), viridis(v.0.6.4), DBI(v.1.1.3), ggforce(v.0.4.1), MASS(v.7.3-60), classInt(v.0.4-10), HDO.db(v.0.99.1), units(v.0.8-4), tools(v.4.3.1), ape(v.5.7-1), scatterpie(v.0.2.1), glue(v.1.6.2), nlme(v.3.1-163), GOSemSim(v.2.26.1), sf(v.1.0-14), grid(v.4.3.1), shadowtext(v.0.1.2), reshape2(v.1.4.4), fgsea(v.1.26.0), generics(v.0.1.3), gtable(v.0.3.4), tzdb(v.0.4.0), class(v.7.3-22), data.table(v.1.14.8), hms(v.1.1.3), tidygraph(v.1.2.3), utf8(v.1.2.3), XVector(v.0.40.0), ggrepel(v.0.9.4), pillar(v.1.9.0), yulab.utils(v.0.1.0), vroom(v.1.6.4), splines(v.4.3.1), tweenr(v.2.0.2), treeio(v.1.24.3), lattice(v.0.21-9), bit(v.4.0.5), tidyselect(v.1.2.0), GO.db(v.3.17.0), Biostrings(v.2.68.1), gridExtra(v.2.3), bookdown(v.0.36), xfun(v.0.40), graphlayouts(v.1.0.1), stringi(v.1.7.12), lazyeval(v.0.2.2), ggfun(v.0.1.3), yaml(v.2.3.7), evaluate(v.0.22), codetools(v.0.2-19), ggraph(v.2.1.0), qvalue(v.2.32.0), RVenn(v.1.1.0), ggplotify(v.0.1.2), cli(v.3.6.1), systemfonts(v.1.0.5), munsell(v.0.5.0), jquerylib(v.0.1.4), Rcpp(v.1.0.11), GenomeInfoDb(v.1.36.4), png(v.0.1-8), parallel(v.4.3.1), blob(v.1.2.4), DOSE(v.3.26.1), bitops(v.1.0-7), viridisLite(v.0.4.2), e1071(v.1.7-13), scales(v.1.2.1), crayon(v.1.5.2), rlang(v.1.1.1), cowplot(v.1.1.1), fastmatch(v.1.1-4) and KEGGREST(v.1.40.1) "],["working-with-sequences-raw-data-quality-control.html", "Chapter 4 Working with Sequences: Raw Data &amp; Quality Control 4.1 Package Install 4.2 Description 4.3 Learning outcomes 4.4 Download fastq 4.5 Examining fastq", " Chapter 4 Working with Sequences: Raw Data &amp; Quality Control last updated: 2023-10-26 4.1 Package Install As usual, make sure we have the right packages for this exercise if (!require(&quot;pacman&quot;)) install.packages(&quot;pacman&quot;); library(pacman) # let&#39;s load all of the files we were using and want to have again today p_load(&quot;tidyverse&quot;, &quot;knitr&quot;, &quot;readr&quot;, &quot;pander&quot;, &quot;BiocManager&quot;, &quot;dplyr&quot;, &quot;stringr&quot;) # We also need the bioconductor packages &quot;ShortRead&quot; and &quot;rfastp&quot; for today&#39;s activity. p_load(&quot;Rfastp&quot;, &quot;ShortRead&quot;) 4.2 Description This activity is intended to familiarize you with raw bioinformatic sequence files. Specifically, we’ll be working with short read sequencing data generated from an Illumina platform. 4.3 Learning outcomes At the end of this exercise, you should be able to: Load and read into R a raw gzipped fastq file. Inspect sequence quality and evaluate results. Perform quality control on raw data and save the processed output. Note that instead of {r}, the below chunk uses {bash}, meaning this isn’t r code but bash code (the language used in the terminal). The -nc flag ensures the files are only downloaded if they don’t already exist where you are downloading them. This may take awhile the first time you run it. The below script is a bash command that downloads these files to your computer 4.4 Download fastq # Be sure to change this file path to the path you want your data to go RAW_DATA_DIR=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/Data/Raw&quot; #if you&#39;re using Windows 10, # in RStudio, go to Tools&gt;Global Options... &gt; Terminal &gt; New Terminals open with... # and choose WSL bash or git bash # next, use: (be sure to put in the correct username) #RAW_DATA_DIR=&quot;/mnt/c/Users/$USER/Desktop/Genomic_Data_Analysis/Data/Raw&quot; # create the destination directory if it doesn&#39;t already exist mkdir -p $RAW_DATA_DIR echo $RAW_DATA_DIR # change to that directory (for this code chunk only) cd $RAW_DATA_DIR pwd # Download the files. # WARNING: curl doesn&#39;t work with relative paths # WT unstressed (mock) curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_MOCK_REP1.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_MOCK_REP2.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_MOCK_REP3.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_MOCK_REP4.fastq.gz?raw=TRUE # WT EtOH curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_ETOH_REP1.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_ETOH_REP2.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_ETOH_REP3.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_WT_ETOH_REP4.fastq.gz?raw=TRUE # msn2/4dd unstressed (mock) curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_MOCK_REP1.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_MOCK_REP2.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_MOCK_REP3.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_MOCK_REP4.fastq.gz?raw=TRUE # msn2/4dd EtOH curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_ETOH_REP1.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_ETOH_REP2.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_ETOH_REP3.fastq.gz?raw=TRUE curl -L -C - -O https://github.com/clstacy/GenomicDataAnalysis_Fa23/raw/main/data/ethanol_stress/fastq/YPS606_MSN24_ETOH_REP4.fastq.gz?raw=TRUE # These are subsamples of raw fastq files from a current project in our lab. # Make sure names are as desired cd $RAW_DATA_DIR # This loops through and removes the suffix file for any OS that doesn&#39;t auto do so. for file in *; do newname=$(echo &quot;$file&quot; | sed &#39;s/\\?raw=TRUE//&#39;) mv &quot;$file&quot; &quot;$newname&quot; done # Let&#39;s see what one of these files contains: # if you&#39;re on windows or linux, delete the g from gzcat below gzcat $RAW_DATA_DIR/YPS606_WT_MOCK_REP1.fastq.gz | head -n8 ## /Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw ## /Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 7257k 100 7257k 0 0 7961k 0 --:--:-- --:--:-- --:--:-- 7961k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 6113k 100 6113k 0 0 8316k 0 --:--:-- --:--:-- --:--:-- 8316k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 7352k 100 7352k 0 0 6882k 0 0:00:01 0:00:01 --:--:-- 12.9M ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 6746k 100 6746k 0 0 9030k 0 --:--:-- --:--:-- --:--:-- 9030k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 0 5774k 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 5774k 100 5774k 0 0 7207k 0 --:--:-- --:--:-- --:--:-- 19.7M ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 0 6438k 0 31831 0 0 45709 0 0:02:24 --:--:-- 0:02:24 45709 56 6438k 56 3609k 0 0 2184k 0 0:00:02 0:00:01 0:00:01 3742k 100 6438k 100 6438k 0 0 3502k 0 0:00:01 0:00:01 --:--:-- 5615k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 6908k 100 6908k 0 0 4237k 0 0:00:01 0:00:01 --:--:-- 8582k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 6020k 100 6020k 0 0 8446k 0 --:--:-- --:--:-- --:--:-- 8446k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 5429k 100 5429k 0 0 6232k 0 --:--:-- --:--:-- --:--:-- 6232k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 5525k 100 5525k 0 0 7484k 0 --:--:-- --:--:-- --:--:-- 13.9M ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 7 6866k 7 494k 0 0 873k 0 0:00:07 --:--:-- 0:00:07 873k 100 6866k 100 6866k 0 0 8877k 0 --:--:-- --:--:-- --:--:-- 30.0M ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 60 6797k 60 4081k 0 0 5477k 0 0:00:01 --:--:-- 0:00:01 5477k 100 6797k 100 6797k 0 0 7781k 0 --:--:-- --:--:-- --:--:-- 20.7M ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 66 7521k 66 4996k 0 0 6212k 0 0:00:01 --:--:-- 0:00:01 6212k 100 7521k 100 7521k 0 0 8430k 0 --:--:-- --:--:-- --:--:-- 28.3M ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 6936k 100 6936k 0 0 8400k 0 --:--:-- --:--:-- --:--:-- 8400k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 6426k 100 6426k 0 0 8192k 0 --:--:-- --:--:-- --:--:-- 8192k ## % Total % Received % Xferd Average Speed Time Time Time Current ## Dload Upload Total Spent Left Speed ## 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 ## 100 6601k 100 6601k 0 0 8491k 0 --:--:-- --:--:-- --:--:-- 8491k ## @K00242:669:HFYYJBBXY:2:1209:22455:7908 1:N:0:GTCCGCAC ## GCAATGGTTTACACCCCACCGTGAGATTAGTATGCAATTTAGATCCATTA ## + ## AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ ## @K00242:669:HFYYJBBXY:2:1219:16254:46926 1:N:0:GTCCGCAC ## GTCTGATTTGTCTAGATTCTTCGCAAATTTCCAGCCTTCAGAGGCTTCGC ## + ## AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ We have the data downloaded onto our system now, so let’s first take a look at some of these files ourselves The R package ShortRead allows us to look at and process raw fastq files. It has many more features than we will use today. 4.5 Examining fastq Let’s take a look at a fastq file # If you&#39;re using windows, put your username below and uncomment this code before continuing if(.Platform$OS.type == &quot;windows&quot;) { Sys.setenv(R_USER = &quot;C:/Users/$USERNAME&quot;) } # change this directory here to where you have the file saved path_fastq_WT_MOCK_REP1 &lt;- path.expand(&quot;~/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_MOCK_REP1.fastq.gz&quot;) fastq_WT_MOCK_REP1 &lt;- readFastq(path_fastq_WT_MOCK_REP1) # file too big? swap readFastq() for: subsampled_fastq_WT_MOCK_REP1 &lt;- yield(FastqSampler(path_fastq_WT_MOCK_REP1, n=10000)) # where n is the number of reads you want to sample # the fastq files we downloaded are smaller than a normal fastq file, # because they have been subsampled down from their full size for demonstration. A few quick ways to examine the fastq data object # Typing the name of the object gives us a simple summary fastq_WT_MOCK_REP1 ## class: ShortReadQ ## length: 223565 reads; width: 50 cycles # the length() function gives us the total number of reads length(fastq_WT_MOCK_REP1) ## [1] 223565 # We can use the width() function to find the size of each read/sequence in fastq width(fastq_WT_MOCK_REP1) |&gt; head() # add head() pipe to only print first 10 ## [1] 50 50 50 50 50 50 #sread() - Retrieve sequence of reads. sread(fastq_WT_MOCK_REP1) ## DNAStringSet object of length 223565: ## width seq ## [1] 50 GCAATGGTTTACACCCCACCGTGAGATTAGTATGCAATTTAGATCCATTA ## [2] 50 GTCTGATTTGTCTAGATTCTTCGCAAATTTCCAGCCTTCAGAGGCTTCGC ## [3] 50 CTTGAAGTAAGCTTCATCAGCTTCCAACATACCATCGAACCATGGCAACA ## [4] 50 GCACCGGCAATCTTGTTACCCATAGCATCGAATTTATCTTCTTCGTCTTC ## [5] 50 CTGTTACCAACTTGTTGTGACATCTTTCTAGTATAATTTTTAAAGTTCTA ## ... ... ... ## [223561] 50 GGTGATCAACTGGATTCATGGCAACACCACGGGTCTTTGGCCAAGAGTTT ## [223562] 50 CTTCCAAGTCGATGTATCTCTTGTGGATTCTCATTTCGTAGGTTTCCCAA ## [223563] 50 CGTTAGCATCAACTTCGAAGATAGCTTCCAAGACTGGTTCACCAGCTGGC ## [223564] 50 GCTTCTTTTCTTGGACCTTTTTCAATCTATAAAATTCTTCTCTGTCCAAC ## [223565] 50 ACCGAATGGAAGATTGGTCACCCTCGGAACCCATGATATCTTCGAATGGG #quality() - Retrieve quality of reads as ASCII scores. quality(fastq_WT_MOCK_REP1) ## class: FastqQuality ## quality: ## BStringSet object of length 223565: ## width seq ## [1] 50 AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ ## [2] 50 AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ ## [3] 50 AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ ## [4] 50 AAFFFJJJJJJJJJJJJJJFJJFJJJJFJJJJJJJJJJJFJFJJJJJJJJ ## [5] 50 AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJ ## ... ... ... ## [223561] 50 AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJ ## [223562] 50 AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ ## [223563] 50 AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ ## [223564] 50 A&lt;FFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ ## [223565] 50 AAFFFJJJJJJJJJJJJJJJJJJJJ-7FJJJJJJJJJJJJJJJJJJJJJJ #id() - Retrieve IDs of reads id(fastq_WT_MOCK_REP1) ## BStringSet object of length 223565: ## width seq ## [1] 53 K00242:669:HFYYJBBXY:2:1209:22455:7908 1:N:0:GTCCGCAC ## [2] 54 K00242:669:HFYYJBBXY:2:1219:16254:46926 1:N:0:GTCCGCAC ## [3] 53 K00242:669:HFYYJBBXY:2:2223:29985:7029 1:N:0:GTCCGCAC ## [4] 52 K00242:669:HFYYJBBXY:2:2213:7770:7750 1:N:0:GTCCGCAC ## [5] 54 K00242:669:HFYYJBBXY:2:1223:27813:29606 1:N:0:GTCCGCAC ## ... ... ... ## [223561] 54 K00242:669:HFYYJBBXY:2:1120:22820:46205 1:N:0:GTCCGCAC ## [223562] 54 K00242:669:HFYYJBBXY:2:2209:17239:49054 1:N:0:GTCCGCAC ## [223563] 53 K00242:669:HFYYJBBXY:2:2206:3244:20656 1:N:0:GTCCGCAC ## [223564] 54 K00242:669:HFYYJBBXY:2:2102:28229:16506 1:N:0:GTCCGCAC ## [223565] 53 K00242:669:HFYYJBBXY:2:2204:17381:6712 1:N:0:GTCCGCAC The output of sread() is a DNAStringSet object, so we can use all of the commands from the Biostrings library on the output object. # first, let&#39;s save the output of sread as an object sequence_of_reads &lt;- sread(fastq_WT_MOCK_REP1) # Now, let&#39;s use the biostrings function alphabetFrequency to see # the occurrence of nucleotide bases in reads. alph_freq &lt;- alphabetFrequency(sequence_of_reads) # subset just the first two reads alph_freq[1:2,] ## A C G T M R W S Y K V H D B N - + . ## [1,] 15 11 9 15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [2,] 9 13 10 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 We see most of the nucleotides are assigned to A, C, G, or T, with one base in each read an N. A fundamental difference between fasta and fastq files is the Quality scores containined in fastQ. Quality scores are stored as ASCII characters representing -log10 probability of base being wrong (Larger scores would be associated to more confident base calls). A comprehensive description of phred quality can be found on the wiki page for FastQ. To see the fastq encodings, we can run: encoding(quality(fastq_WT_MOCK_REP1)) ## ! &quot; # $ % &amp; &#39; ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ## 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ## ; &lt; = &gt; ? @ A B C D E F G H I J K L M N O P Q R S T ## 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ## U V W X Y Z [ \\\\ ] ^ _ ` a b c d e f g h i j k l m n ## 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 ## o p q r s t u v w x y z { | } ~ ## 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 The ShortRead package has many functions available to allow us to collect useful metrics from our ShortRead object. One very useful function is the alphabetByCycle() function which provides a quick method to summarise base occurrence of cycles. Here we apply alphabetByCycle() function to the sequence information and show the occurrence of main 4 bases over first 15 cycles. alph_by_cycle &lt;- alphabetByCycle(sequence_of_reads) alph_by_cycle[1:4,1:15] ## cycle ## alphabet [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] ## A 21976 31733 40716 54511 67035 76250 52744 50858 52179 82996 65197 ## C 80979 59940 67520 56801 42469 38578 34934 49605 44865 33367 47832 ## G 91512 46565 44726 59238 53934 41211 34113 40354 43781 41308 50801 ## T 28656 85309 70603 52948 60117 67525 101774 82748 82740 65894 59735 ## cycle ## alphabet [,12] [,13] [,14] [,15] ## A 56240 62322 63066 62605 ## C 50963 43951 43562 46231 ## G 45250 44735 43818 43027 ## T 71112 72557 73119 71702 We can use the table function to identify the number of times a sequence appears in our FastQ file’s sequence reads. readOccurence &lt;- table(sequence_of_reads) # see the top 3 sequences that appear the highest number of times sort(readOccurence,decreasing = TRUE)[1:3] ## sequence_of_reads ## CTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT ## 600 ## CCCCCCCCCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT ## 496 ## CCCCCCCCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT ## 392 We can identify duplicated reads (potentially arising from PCR over amplification) by using the srduplicated() function and the ShortReadQ object. This returns a logical vector identifying which reads’ sequences are duplicates (occur more than once in file). Note that the first time a sequence appears in file is not a duplicate but the second, third, fourth times etc are. duplicates &lt;- srduplicated(fastq_WT_MOCK_REP1) duplicates[1:3] ## [1] FALSE FALSE FALSE # we can use table() to get a quick summary of the seq duplication rate table(duplicates) ## duplicates ## FALSE TRUE ## 140931 82634 The ShortRead package also contains a function to generate a simple quality control report. The qa() function accepts a FastQ file and returns a FastqQA object. qa_WT_MOCK_REP1 &lt;- qa(path_fastq_WT_MOCK_REP1) qa_WT_MOCK_REP1 ## class: FastqQA(10) ## QA elements (access with qa[[&quot;elt&quot;]]): ## readCounts: data.frame(1 3) ## baseCalls: data.frame(1 5) ## readQualityScore: data.frame(512 4) ## baseQuality: data.frame(95 3) ## alignQuality: data.frame(1 3) ## frequentSequences: data.frame(50 4) ## sequenceDistribution: data.frame(76 4) ## perCycle: list(2) ## baseCall: data.frame(231 4) ## quality: data.frame(322 5) ## perTile: list(2) ## readCounts: data.frame(0 4) ## medianReadQualityScore: data.frame(0 4) ## adapterContamination: data.frame(1 1) We can then use the report() function to generate a simple report. myReport_WT_MOCK_REP1 &lt;- report(qa_WT_MOCK_REP1) myReport_WT_MOCK_REP1 ## [1] &quot;/var/folders/y1/f7wyg4vj50dgrg8drv0bn4nc0000gn/T//RtmpbCeGU7/file16b718f864a/index.html&quot; Finally we can review the report in a browser or use the browseURL function to open it in a browser from R. browseURL(myReport_WT_MOCK_REP1) "],["trimming.html", "Chapter 5 Trimming 5.1 Is there any way we can automate some of this?", " Chapter 5 Trimming When we observe low quality at the end of reads we may wish to remove the low quality bases for later alignment to the genome. The trimTails() function trims reads from the 3’, removing bases which fall below a desired quality. The trimTails() function accepts arguments specifying the ShortReadQ object, the minimum number of successive bases required to be below quality cut-off for trimming and the actual cut-off score. trimmed_fastq_WT_MOCK_REP1 &lt;- trimTails(fastq_WT_MOCK_REP1, # ShortReadQ object to trim k=10, # integer number of failing letters to trigger trim a=&quot;5&quot;) # character giving letter at or below to &quot;fail&quot; trimmed_fastq_WT_MOCK_REP1 ## class: ShortReadQ ## length: 223565 reads; width: 16..50 cycles Now we have trimmed our FastQ reads, we can export these reads for further analysis using the writeFastq() function writeFastq(trimmed_fastq_WT_MOCK_REP1, &quot;~/Desktop/Genomic_Data_Analysis/WT_MOCK_REP1_shortread_trimmed.fastq.gz&quot;) #path to save file 5.1 Is there any way we can automate some of this? There are several utility programs that will provide you with QC and trim your data for you, with less input from you. We like fastp as it does some basic QC and trims your fastq files, and it does it very quickly. To make this available in R, it has been made available in the Bioconductor package Rfastp. By default, fastp will make a html report to summarize your result. But the Rfastp wrapper allows you to look at some of them in R. # create a directory for the output to go into if not already present output_dir &lt;- paste0(dirname(dirname(path_fastq_WT_MOCK_REP1)), &quot;/Trimmed_rfastp&quot;) if (!dir.exists(output_dir)) {dir.create(output_dir, recursive = TRUE)} # if we wanted to just run a single file, we would do so like this: rfastp_report &lt;- rfastp(read1 = path_fastq_WT_MOCK_REP1, outputFastq = paste0(output_dir, &quot;/YPS606_WT_MOCK_REP1&quot;)) # print out the qc summary for this sample df_summary &lt;- qcSummary(rfastp_report) df_summary |&gt; print.data.frame() ## Before_QC After_QC ## total_reads 2.235650e+05 2.235390e+05 ## total_bases 1.117825e+07 1.117695e+07 ## q20_bases 1.110373e+07 1.110280e+07 ## q30_bases 1.096271e+07 1.096189e+07 ## q20_rate 9.933340e-01 9.933660e-01 ## q30_rate 9.807180e-01 9.807590e-01 ## read1_mean_length 5.000000e+01 5.000000e+01 ## gc_content 4.165340e-01 4.165420e-01 "],["batch-file-processing.html", "Chapter 6 Batch file processing 6.1 QC and adapters 6.2 Running fastqc 6.3 Multiqc for QC on mutliple samples", " Chapter 6 Batch file processing That’s nice, but we rarely just have a single fastq file, and we’d like to look at them all at once. Luckily, we can do that with rfastp. First, we need to get the locations of all of the files we downloaded earlier # adjust to the path where you assigned in RAW_DATA_DIR if using different than default fq_file_dir &lt;- dirname(path_fastq_WT_MOCK_REP1) # this just gets the path file is in. # crate a list of all of the files fastq.files &lt;- list.files(path = fq_file_dir, # where to look pattern = &quot;REP[0-9].fastq.gz$&quot;, # the pattern of file name to find # Note, if you have other fastq files in the folder, they will also be included. full.names = TRUE) # save the full path to the file print(fastq.files) ## [1] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_ETOH_REP1.fastq.gz&quot; ## [2] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_ETOH_REP2.fastq.gz&quot; ## [3] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_ETOH_REP3.fastq.gz&quot; ## [4] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_ETOH_REP4.fastq.gz&quot; ## [5] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_MOCK_REP1.fastq.gz&quot; ## [6] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_MOCK_REP2.fastq.gz&quot; ## [7] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_MOCK_REP3.fastq.gz&quot; ## [8] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_MSN24_MOCK_REP4.fastq.gz&quot; ## [9] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_ETOH_REP1.fastq.gz&quot; ## [10] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_ETOH_REP2.fastq.gz&quot; ## [11] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_ETOH_REP3.fastq.gz&quot; ## [12] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_ETOH_REP4.fastq.gz&quot; ## [13] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_MOCK_REP1.fastq.gz&quot; ## [14] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_MOCK_REP2.fastq.gz&quot; ## [15] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_MOCK_REP3.fastq.gz&quot; ## [16] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Raw/YPS606_WT_MOCK_REP4.fastq.gz&quot; Now we have all of the file paths We can loop through all of the files to perform filtering and trimming. Note there are many arguments that can be modified. Use ?rfastp to learn more. # run rfastp on all fastq files for (i in 1:length(fastq.files)) { # file path to single end read read1 &lt;- fastq.files[i] # assign output file (putting it inside of Data/Trimmed folder) output_name &lt;- paste0(output_dir, &quot;/&quot;, basename(fastq.files[i])) json_report &lt;- rfastp( read1 = read1, outputFastq = str_split(output_name, fixed(&quot;.&quot;))[[1]][1], disableTrimPolyG = FALSE, # cutLowQualFront = TRUE, # cutFrontWindowSize = 3, # cutFrontMeanQual = 10, # cutLowQualTail = TRUE, cutTailWindowSize = 1, # cutTailMeanQual = 5, minReadLength = 15, # trimFrontRead1 = 10, # adapterSequenceRead1 = &#39;GTGTCAGTCACTTCCAGCGG&#39; ) # Print the output file link in the R Markdown document cat(paste0( &quot;[Processing Complete - &quot;, basename(output_name), &quot;](&quot;, output_name, &quot;)\\n\\n&quot; )) } ## [Processing Complete - YPS606_MSN24_ETOH_REP1.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP1.fastq.gz) ## ## [Processing Complete - YPS606_MSN24_ETOH_REP2.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP2.fastq.gz) ## ## [Processing Complete - YPS606_MSN24_ETOH_REP3.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP3.fastq.gz) ## ## [Processing Complete - YPS606_MSN24_ETOH_REP4.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP4.fastq.gz) ## ## [Processing Complete - YPS606_MSN24_MOCK_REP1.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP1.fastq.gz) ## ## [Processing Complete - YPS606_MSN24_MOCK_REP2.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP2.fastq.gz) ## ## [Processing Complete - YPS606_MSN24_MOCK_REP3.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP3.fastq.gz) ## ## [Processing Complete - YPS606_MSN24_MOCK_REP4.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP4.fastq.gz) ## ## [Processing Complete - YPS606_WT_ETOH_REP1.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP1.fastq.gz) ## ## [Processing Complete - YPS606_WT_ETOH_REP2.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP2.fastq.gz) ## ## [Processing Complete - YPS606_WT_ETOH_REP3.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP3.fastq.gz) ## ## [Processing Complete - YPS606_WT_ETOH_REP4.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP4.fastq.gz) ## ## [Processing Complete - YPS606_WT_MOCK_REP1.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP1.fastq.gz) ## ## [Processing Complete - YPS606_WT_MOCK_REP2.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP2.fastq.gz) ## ## [Processing Complete - YPS606_WT_MOCK_REP3.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP3.fastq.gz) ## ## [Processing Complete - YPS606_WT_MOCK_REP4.fastq.gz](/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP4.fastq.gz) 6.0.1 Running RfastP creates several files: XXX_R1.fastq.gz - FASTQ with poor quality reads filtered out XXX.html - HTML file contains a QC report XXX.json - JSON file with all the summary statistics 6.1 QC and adapters Another common tool for quality control is called FastQC, useable via command line or GUI, available at https://www.bioinformatics.babraham.ac.uk/projects/fastqc/ or via pip or conda install in the command line. To use this tool, let’s get conda running on your computer. NOTE: Anaconda is already installed on computers in the computer lab. If you are using your own computer, you’ll need to have conda installed (link to learn more) First, we need to open a terminal window. We will copy code from the below code chunk into the terminal window. . /opt/anaconda3/bin/activate &amp;&amp; conda init #. /opt/anaconda3/bin/activate &amp;&amp; conda activate /opt/anaconda3; # run this command in terminal to make sure conda is activated which conda # copy these 4 lines into terminal and run them conda config --add channels defaults conda config --append channels bioconda conda config --append channels conda-forge conda config --set channel_priority strict # check channel order conda config --show channels Now, we need to create a conda environment with our packages. You can do so with the code below. This may take a couple of minutes the first time we run it. # create an enviornment for our QC packages if conda info --envs | grep -q QC; then echo &quot;environment &#39;QC&#39; already exists&quot;; else conda create -y -n QC fastqc multiqc; fi # see available conda environments conda env list # activate our QC environment conda activate QC # make sure desired packages are working which fastqc which multiqc # get the versions of each software fastqc -v multiqc --version # it&#39;s always good coding practice to deactivate a conda environment at the end of a chunk conda deactivate ## environment &#39;QC&#39; already exists ## # conda environments: ## # ## /Users/clstacy/Library/r-miniconda ## /Users/clstacy/Library/r-miniconda-arm64 ## /Users/clstacy/Library/r-miniconda-arm64/envs/r-reticulate ## /Users/clstacy/Library/r-miniconda/envs/r-reticulate ## base * /Users/clstacy/anaconda3 ## QC /Users/clstacy/anaconda3/envs/QC ## mageck /Users/clstacy/anaconda3/envs/mageck ## salmon /Users/clstacy/anaconda3/envs/salmon ## /Users/clstacy/opt/anaconda3 ## /Users/clstacy/opt/anaconda3/envs/colony_count_nn ## /Users/clstacy/opt/anaconda3/envs/tlcc ## ## /Users/clstacy/anaconda3/envs/QC/bin/fastqc ## /Users/clstacy/anaconda3/envs/QC/bin/multiqc ## FastQC v0.12.1 ## multiqc, version 1.15 6.2 Running fastqc #WARNING: variables in bash you&#39;ve saved in previous chunks won&#39;t be retained in later chunks # We need to set a variable for the folder above raw and trimmed files. DATA_DIR=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/Data&quot; QC_DIR=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/QC&quot; # Activate conda QC environment conda activate QC # show which version of fastqc is active fastqc -v # Function to check if a command is installed, we use this next. command_exists() { command -v &quot;$1&quot; &gt;/dev/null 2&gt;&amp;1 } if command_exists fastqc; then # Continue if fastqc is installed # first, make sure we have the folders to store the fastqc outputs mkdir -p $QC_DIR/fastqc/Raw mkdir -p $QC_DIR/fastqc/Trimmed # run fastqc on the raw data files fastqc $DATA_DIR/Raw/*.fastq.gz -o $QC_DIR/fastqc/Raw # run fastqc on the trimmed data files fastqc $DATA_DIR/Trimmed_rfastp/*.fastq.gz -o $QC_DIR/fastqc/Trimmed if [ $? -ne 0 ]; then echo &quot;FastQC execution failed. It didn&#39;t work.&quot; fi else echo &quot;FastQC is not installed.&quot; fi # deactivate QC conda environment conda deactivate ## FastQC v0.12.1 ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## Started analysis of YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 5% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP1.fastq.gz ## Warning: the fonts &quot;Times&quot; and &quot;Times&quot; are not available for the Java logical font &quot;Serif&quot;, which may have unexpected appearance or behavior. Re-enable the &quot;Times&quot; font to remove this warning. ## Started analysis of YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 5% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP2.fastq.gz ## Started analysis of YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 5% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP3.fastq.gz ## Started analysis of YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 5% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP4.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP1.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP2.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Approx 100% complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP3.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP4.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP1.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP1.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP1.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP2.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP2.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP2.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP3.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP3.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP3.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP4.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP4.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP4.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP1.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP1.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP1.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP2.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP2.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP2.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP3.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP3.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP3.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP4.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP4.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP4.fastq.gz ## application/octet-stream ## application/octet-stream ## Started analysis of YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## application/octet-stream ## Approx 5% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP1_R1.fastq.gz ## Warning: the fonts &quot;Times&quot; and &quot;Times&quot; are not available for the Java logical font &quot;Serif&quot;, which may have unexpected appearance or behavior. Re-enable the &quot;Times&quot; font to remove this warning. ## Started analysis of YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 5% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP2_R1.fastq.gz ## Started analysis of YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 5% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP3_R1.fastq.gz ## Started analysis of YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 5% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Analysis complete for YPS606_MSN24_ETOH_REP4_R1.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP1_R1.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP2_R1.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Approx 100% complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP3_R1.fastq.gz ## Started analysis of YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 5% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 10% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 15% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 20% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 25% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 30% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 35% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 40% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 45% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 50% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 55% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 60% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 65% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 70% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 75% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 80% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 85% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 90% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Approx 95% complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Analysis complete for YPS606_MSN24_MOCK_REP4_R1.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP1_R1.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP2_R1.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP3_R1.fastq.gz ## Started analysis of YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 5% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 10% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 15% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 20% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 25% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 30% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 35% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 40% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 45% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 50% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 55% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 60% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 65% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 70% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 75% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 80% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 85% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 90% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Approx 95% complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Analysis complete for YPS606_WT_ETOH_REP4_R1.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP1_R1.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP2_R1.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP3_R1.fastq.gz ## Started analysis of YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 5% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 10% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 15% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 20% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 25% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 30% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 35% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 40% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 45% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 50% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 55% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 60% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 65% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 70% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 75% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 80% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 85% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 90% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Approx 95% complete for YPS606_WT_MOCK_REP4_R1.fastq.gz ## Analysis complete for YPS606_WT_MOCK_REP4_R1.fastq.gz This link shows the fastqc output for the trimmed WT_MOCK_REP1.fastq.gz browseURL(&quot;~/Desktop/Genomic_Data_Analysis/QC/fastqc/Trimmed/YPS606_WT_MOCK_REP1_R1_fastqc.html&quot;) We could do this for each of the html fastq files to see how they all look but with a large sample size that takes a long time and can lead to missing important information. 6.3 Multiqc for QC on mutliple samples One of our favorite ways to analyze multiple samples simultaneously is MultiQC a software that combines fastQC (and other) reports Here is the code to run it: # Be sure to change this file path to the path you want to run multiqc QC_DIR=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/QC&quot; # activate QC environment conda activate QC # run multiqc on all of the fastqc outputs multiqc $QC_DIR/fastqc -o $QC_DIR -m fastqc -f ## ## /// MultiQC 🔍 | v1.15 ## ## | multiqc | MultiQC Version v1.16 now available! ## | multiqc | Only using modules: fastqc ## | multiqc | Search path : /Users/clstacy/Desktop/Genomic_Data_Analysis/QC/fastqc ## | searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 66/66 ## | fastqc | Found 32 reports ## | multiqc | Report : ../../../Desktop/Genomic_Data_Analysis/QC/multiqc_report.html (overwritten) ## | multiqc | Data : ../../../Desktop/Genomic_Data_Analysis/QC/multiqc_data (overwritten) ## | multiqc | MultiQC complete path_multiqc &lt;- &quot;~/Desktop/Genomic_Data_Analysis/QC/multiqc_report.html&quot; browseURL(path_multiqc) Be sure to knit this file into a pdf or html file once you’re finished. System information for reproducibility: pander::pander(sessionInfo()) R version 4.3.1 (2023-06-16) Platform: aarch64-apple-darwin20 (64-bit) locale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8 attached base packages: stats4, stats, graphics, grDevices, utils, datasets, methods and base other attached packages: ShortRead(v.1.58.0), GenomicAlignments(v.1.36.0), SummarizedExperiment(v.1.30.2), MatrixGenerics(v.1.12.3), matrixStats(v.1.0.0), Rsamtools(v.2.16.0), GenomicRanges(v.1.52.1), Biostrings(v.2.68.1), GenomeInfoDb(v.1.36.4), XVector(v.0.40.0), BiocParallel(v.1.34.2), Rfastp(v.1.10.0), org.Sc.sgd.db(v.3.17.0), AnnotationDbi(v.1.62.2), IRanges(v.2.34.1), S4Vectors(v.0.38.2), Biobase(v.2.60.0), BiocGenerics(v.0.46.0), clusterProfiler(v.4.8.2), ggVennDiagram(v.1.2.3), tidytree(v.0.4.5), igraph(v.1.5.1), janitor(v.2.2.0), BiocManager(v.1.30.22), pander(v.0.6.5), knitr(v.1.44), here(v.1.0.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.0), dplyr(v.1.1.3), purrr(v.1.0.2), readr(v.2.1.4), tidyr(v.1.3.0), tibble(v.3.2.1), ggplot2(v.3.4.4), tidyverse(v.2.0.0) and pacman(v.0.5.1) loaded via a namespace (and not attached): RColorBrewer(v.1.1-3), rstudioapi(v.0.15.0), jsonlite(v.1.8.7), magrittr(v.2.0.3), farver(v.2.1.1), rmarkdown(v.2.25), ragg(v.1.2.6), fs(v.1.6.3), zlibbioc(v.1.46.0), vctrs(v.0.6.4), memoise(v.2.0.1), RCurl(v.1.98-1.12), ggtree(v.3.8.2), S4Arrays(v.1.0.6), htmltools(v.0.5.6.1), curl(v.5.1.0), gridGraphics(v.0.5-1), sass(v.0.4.7), KernSmooth(v.2.23-22), bslib(v.0.5.1), plyr(v.1.8.9), cachem(v.1.0.8), lifecycle(v.1.0.3), pkgconfig(v.2.0.3), Matrix(v.1.6-1.1), R6(v.2.5.1), fastmap(v.1.1.1), gson(v.0.1.0), GenomeInfoDbData(v.1.2.10), snakecase(v.0.11.1), digest(v.0.6.33), aplot(v.0.2.2), enrichplot(v.1.20.0), colorspace(v.2.1-0), patchwork(v.1.1.3), rprojroot(v.2.0.3), textshaping(v.0.3.7), RSQLite(v.2.3.1), hwriter(v.1.3.2.1), labeling(v.0.4.3), fansi(v.1.0.5), timechange(v.0.2.0), abind(v.1.4-5), httr(v.1.4.7), polyclip(v.1.10-6), compiler(v.4.3.1), proxy(v.0.4-27), bit64(v.4.0.5), withr(v.2.5.1), downloader(v.0.4), viridis(v.0.6.4), DBI(v.1.1.3), ggforce(v.0.4.1), MASS(v.7.3-60), DelayedArray(v.0.26.7), rjson(v.0.2.21), classInt(v.0.4-10), HDO.db(v.0.99.1), units(v.0.8-4), tools(v.4.3.1), ape(v.5.7-1), scatterpie(v.0.2.1), glue(v.1.6.2), nlme(v.3.1-163), GOSemSim(v.2.26.1), sf(v.1.0-14), grid(v.4.3.1), shadowtext(v.0.1.2), reshape2(v.1.4.4), fgsea(v.1.26.0), generics(v.0.1.3), gtable(v.0.3.4), tzdb(v.0.4.0), class(v.7.3-22), data.table(v.1.14.8), hms(v.1.1.3), tidygraph(v.1.2.3), utf8(v.1.2.3), ggrepel(v.0.9.4), pillar(v.1.9.0), yulab.utils(v.0.1.0), vroom(v.1.6.4), splines(v.4.3.1), tweenr(v.2.0.2), treeio(v.1.24.3), lattice(v.0.21-9), deldir(v.1.0-9), bit(v.4.0.5), tidyselect(v.1.2.0), GO.db(v.3.17.0), gridExtra(v.2.3), bookdown(v.0.36), xfun(v.0.40), graphlayouts(v.1.0.1), stringi(v.1.7.12), lazyeval(v.0.2.2), ggfun(v.0.1.3), yaml(v.2.3.7), evaluate(v.0.22), codetools(v.0.2-19), interp(v.1.1-4), ggraph(v.2.1.0), qvalue(v.2.32.0), RVenn(v.1.1.0), ggplotify(v.0.1.2), cli(v.3.6.1), systemfonts(v.1.0.5), munsell(v.0.5.0), jquerylib(v.0.1.4), Rcpp(v.1.0.11), png(v.0.1-8), parallel(v.4.3.1), blob(v.1.2.4), jpeg(v.0.1-10), latticeExtra(v.0.6-30), DOSE(v.3.26.1), bitops(v.1.0-7), viridisLite(v.0.4.2), e1071(v.1.7-13), scales(v.1.2.1), crayon(v.1.5.2), rlang(v.1.1.1), cowplot(v.1.1.1), fastmatch(v.1.1-4) and KEGGREST(v.1.40.1) "],["read-mapping.html", "Chapter 7 Read Mapping 7.1 Alignment 7.2 Retrieve the genome 7.3 Build Rsubread Index 7.4 Pseudomapping with Salmon 7.5 Questions", " Chapter 7 Read Mapping last updated: 2023-10-26 As usual, make sure we have the right packages for this exercise if (!require(&quot;pacman&quot;)) install.packages(&quot;pacman&quot;); library(pacman) # let&#39;s load all of the files we were using and want to have again today p_load(&quot;tidyverse&quot;, &quot;knitr&quot;, &quot;readr&quot;, &quot;pander&quot;, &quot;BiocManager&quot;, &quot;dplyr&quot;, &quot;stringr&quot;) # We also need the Bioconductor packages &quot;Rsubread&quot; for today&#39;s activity. p_load(&quot;Rsubread&quot;) Previously, we filtered and trimmed our raw fastq files. They should be in the folder below, unless you chose a different place to store them. dir_trimmed.fq_files &lt;- &quot;~/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp&quot; trimmed_fastq_files &lt;- list.files(path = dir_trimmed.fq_files, pattern = &quot;.fastq.gz$&quot;, full.names = TRUE) trimmed_fastq_files ## [1] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP1_R1.fastq.gz&quot; ## [2] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP2_R1.fastq.gz&quot; ## [3] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP3_R1.fastq.gz&quot; ## [4] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP4_R1.fastq.gz&quot; ## [5] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP1_R1.fastq.gz&quot; ## [6] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP2_R1.fastq.gz&quot; ## [7] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP3_R1.fastq.gz&quot; ## [8] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP4_R1.fastq.gz&quot; ## [9] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP1_R1.fastq.gz&quot; ## [10] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP2_R1.fastq.gz&quot; ## [11] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP3_R1.fastq.gz&quot; ## [12] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP4_R1.fastq.gz&quot; ## [13] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP1_R1.fastq.gz&quot; ## [14] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP2_R1.fastq.gz&quot; ## [15] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP3_R1.fastq.gz&quot; ## [16] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP4_R1.fastq.gz&quot; You should see the full paths to all 16 trimmed fastq files that we will be mapping to the reference genome today. 7.1 Alignment Read sequences are stored in compressed (gzipped) FASTQ files. Before the differential expression analysis can proceed, these reads must be aligned to the yeast genome and counted into annotated genes. This can be achieved with functions in the Rsubread package. 7.2 Retrieve the genome We will use a bash code chunk to download the latest genome # Define the destination file path # You can change this file path to the path you want your data to go, or leave it. REF_DIR=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/Reference&quot; # make that directory if it doesn&#39;t already mkdir -p $REF_DIR # Define the URL of reference genome # (latest from ensembl) url=&quot;ftp://ftp.ensembl.org/pub/release-110/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz&quot; # Check if the file already exists at the destination location if [ ! -f &quot;$REF_DIR/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz&quot; ]; then echo &quot;Reference genome not found, downloading...&quot; # If the file does not exist, download it using curl curl -o &quot;$REF_DIR/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz&quot; &quot;$url&quot; echo &quot;Downloading finished&quot; else echo &quot;File already exists at $REF_DIR Skipping download.&quot; fi ## File already exists at /Users/clstacy/Desktop/Genomic_Data_Analysis/Reference Skipping download. 7.3 Build Rsubread Index The first step in performing the alignment is to build an index. In order to build an index you need to have the fasta file (.fa), which can be downloaded from the UCSC genome browser. This may take several minutes to run. Building the full index using the whole genome usually takes about 30 minutes to an hr on a server for larger Eukaryotic genomes. Because yeast has a relatively small genome size, we are able to build the full index in class. library(Rsubread) # Set path of the reference fasta file reference_genome = path.expand(&quot;~/Desktop/Genomic_Data_Analysis/Reference/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz&quot;) index_reference_genome = path.expand(&quot;~/Desktop/Genomic_Data_Analysis/Reference/index_rsubread_Saccharomyces_cerevisiae.R64-1-1&quot;) # build the index buildindex(basename=index_reference_genome, reference=reference_genome) ## ## ========== _____ _ _ ____ _____ ______ _____ ## ===== / ____| | | | _ \\| __ \\| ____| /\\ | __ \\ ## ===== | (___ | | | | |_) | |__) | |__ / \\ | | | | ## ==== \\___ \\| | | | _ &lt;| _ /| __| / /\\ \\ | | | | ## ==== ____) | |__| | |_) | | \\ \\| |____ / ____ \\| |__| | ## ========== |_____/ \\____/|____/|_| \\_\\______/_/ \\_\\_____/ ## Rsubread 2.14.2 ## ## //================================= setting ==================================\\\\ ## || || ## || Index name : index_rsubread_Saccharomyces_cerevisiae.R6 ... || ## || Index space : base space || ## || Index split : no-split || ## || Repeat threshold : 100 repeats || ## || Gapped index : no || ## || || ## || Free / total memory : 1.4GB / 8.0GB || ## || || ## || Input files : 1 file in total || ## || o Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz || ## || || ## || || ## || WARNING: the free memory is lower than 3.0GB. || ## || the program may run very slow or crash. || ## || || ## \\\\============================================================================// ## ## //================================= Running ==================================\\\\ ## || || ## || Check the integrity of provided reference sequences ... || ## || No format issues were found || ## || Scan uninformative subreads in reference sequences ... || ## || 11 uninformative subreads were found. || ## || These subreads were excluded from index building. || ## || Estimate the index size... || ## || 8%, 0 mins elapsed, rate=9960.4k bps/s || ## || 16%, 0 mins elapsed, rate=11494.5k bps/s || ## || 24%, 0 mins elapsed, rate=12057.2k bps/s || ## || 33%, 0 mins elapsed, rate=12376.9k bps/s || ## || 41%, 0 mins elapsed, rate=12547.2k bps/s || ## || 49%, 0 mins elapsed, rate=12702.2k bps/s || ## || 58%, 0 mins elapsed, rate=12812.2k bps/s || ## || 66%, 0 mins elapsed, rate=12918.7k bps/s || ## || 74%, 0 mins elapsed, rate=12985.2k bps/s || ## || 83%, 0 mins elapsed, rate=13044.8k bps/s || ## || 91%, 0 mins elapsed, rate=13068.8k bps/s || ## || || ## || WARNING: available memory is lower than 3.0 GB. || ## || The program may run very slow. || ## || Build a gapped index and/or split index into blocks to reduce memory use. || ## || || ## || Build the index... || ## || 8%, 0 mins elapsed, rate=217.5k bps/s || ## || 16%, 0 mins elapsed, rate=249.5k bps/s || ## || 24%, 0 mins elapsed, rate=240.3k bps/s || ## || 33%, 0 mins elapsed, rate=247.0k bps/s || ## || 41%, 0 mins elapsed, rate=251.0k bps/s || ## || 49%, 0 mins elapsed, rate=256.0k bps/s || ## || 58%, 0 mins elapsed, rate=243.3k bps/s || ## || 66%, 0 mins elapsed, rate=232.4k bps/s || ## || 74%, 0 mins elapsed, rate=231.8k bps/s || ## || 83%, 0 mins elapsed, rate=230.8k bps/s || ## || 91%, 0 mins elapsed, rate=231.0k bps/s || ## || Save current index block... || ## || [ 0.0% finished ] || ## || [ 10.0% finished ] || ## || [ 20.0% finished ] || ## || [ 30.0% finished ] || ## || [ 40.0% finished ] || ## || [ 50.0% finished ] || ## || [ 60.0% finished ] || ## || [ 70.0% finished ] || ## || [ 80.0% finished ] || ## || [ 90.0% finished ] || ## || [ 100.0% finished ] || ## || || ## || Total running time: 1.4 minutes. || ## ||Index /Users/clstacy/Desktop/Genomic_Data_Analysis/Reference/index_rsu ... || ## || || ## \\\\============================================================================// We can see the arguments available with the align function from the Rsubread package args(align) ## function (index, readfile1, readfile2 = NULL, type = &quot;rna&quot;, input_format = &quot;gzFASTQ&quot;, ## output_format = &quot;BAM&quot;, output_file = paste(readfile1, &quot;subread&quot;, ## output_format, sep = &quot;.&quot;), phredOffset = 33, nsubreads = 10, ## TH1 = 3, TH2 = 1, maxMismatches = 3, unique = FALSE, nBestLocations = 1, ## indels = 5, complexIndels = FALSE, nTrim5 = 0, nTrim3 = 0, ## minFragLength = 50, maxFragLength = 600, PE_orientation = &quot;fr&quot;, ## nthreads = 1, readGroupID = NULL, readGroup = NULL, keepReadOrder = FALSE, ## sortReadsByCoordinates = FALSE, color2base = FALSE, DP_GapOpenPenalty = -1, ## DP_GapExtPenalty = 0, DP_MismatchPenalty = 0, DP_MatchScore = 2, ## detectSV = FALSE, useAnnotation = FALSE, annot.inbuilt = &quot;mm39&quot;, ## annot.ext = NULL, isGTF = FALSE, GTF.featureType = &quot;exon&quot;, ## GTF.attrType = &quot;gene_id&quot;, chrAliases = NULL) ## NULL This process takes some time to finish. # run the alignment on all of the trimmed_fastq_files align(index=index_reference_genome, readfile1=trimmed_fastq_files, type = &quot;rna&quot;, input_format = &quot;gzFASTQ&quot;, output_format = &quot;BAM&quot;, unique = TRUE, nBestLocations = 1, sortReadsByCoordinates = TRUE, nthreads=6 ) The output of the alignment are bam corresponding to each fastq file. We can get a summary of the proportion of reads that mapped to the reference genome using the propmapped function. # create an object in R listing bam_files &lt;- list.files(path = dir_trimmed.fq_files, pattern = &quot;.BAM$&quot;, full.names = TRUE) bam_files ## [1] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP1_R1.fastq.gz.subread.BAM&quot; ## [2] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP2_R1.fastq.gz.subread.BAM&quot; ## [3] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP3_R1.fastq.gz.subread.BAM&quot; ## [4] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_ETOH_REP4_R1.fastq.gz.subread.BAM&quot; ## [5] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP1_R1.fastq.gz.subread.BAM&quot; ## [6] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP2_R1.fastq.gz.subread.BAM&quot; ## [7] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP3_R1.fastq.gz.subread.BAM&quot; ## [8] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_MSN24_MOCK_REP4_R1.fastq.gz.subread.BAM&quot; ## [9] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP1_R1.fastq.gz.subread.BAM&quot; ## [10] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP2_R1.fastq.gz.subread.BAM&quot; ## [11] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP3_R1.fastq.gz.subread.BAM&quot; ## [12] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_ETOH_REP4_R1.fastq.gz.subread.BAM&quot; ## [13] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP1_R1.fastq.gz.subread.BAM&quot; ## [14] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP2_R1.fastq.gz.subread.BAM&quot; ## [15] &quot;/Users/clstacy/Desktop/Genomic_Data_Analysis/Data/Trimmed_rfastp/YPS606_WT_MOCK_REP3_R1.fastq.gz.subread.BAM&quot; # find the proportion of reads that mapped for each sample props &lt;- propmapped(files=bam_files) props |&gt; print() ## NumTotal NumMapped PropMapped ## YPS606_MSN24_ETOH_REP1_R1.fastq.gz.subread.BAM 0 0 NaN ## YPS606_MSN24_ETOH_REP2_R1.fastq.gz.subread.BAM 0 0 NaN ## YPS606_MSN24_ETOH_REP3_R1.fastq.gz.subread.BAM 199076 173693 0.872496 ## YPS606_MSN24_ETOH_REP4_R1.fastq.gz.subread.BAM 205792 178785 0.868766 ## YPS606_MSN24_MOCK_REP1_R1.fastq.gz.subread.BAM 167075 143114 0.856585 ## YPS606_MSN24_MOCK_REP2_R1.fastq.gz.subread.BAM 169754 146302 0.861847 ## YPS606_MSN24_MOCK_REP3_R1.fastq.gz.subread.BAM 210001 178664 0.850777 ## YPS606_MSN24_MOCK_REP4_R1.fastq.gz.subread.BAM 208329 177749 0.853213 ## YPS606_WT_ETOH_REP1_R1.fastq.gz.subread.BAM 181587 159200 0.876715 ## YPS606_WT_ETOH_REP2_R1.fastq.gz.subread.BAM 201551 176904 0.877713 ## YPS606_WT_ETOH_REP3_R1.fastq.gz.subread.BAM 214745 188499 0.877781 ## YPS606_WT_ETOH_REP4_R1.fastq.gz.subread.BAM 187319 164152 0.876323 ## YPS606_WT_MOCK_REP1_R1.fastq.gz.subread.BAM 223539 193407 0.865205 ## YPS606_WT_MOCK_REP2_R1.fastq.gz.subread.BAM 187469 161251 0.860148 ## YPS606_WT_MOCK_REP3_R1.fastq.gz.subread.BAM 0 0 NaN 7.4 Pseudomapping with Salmon Salmon is a widely used pseudomapper. It is not available to use in R, but we can use bash code chunks to run it in the same markdown document. 7.4.1 Create Conda Env First, we need to create a new conda environment for salmon. Depending on your computer, we might need to run this code in terminal. ## Warning, if you did not complete Working_with_Sequences.Rmd activity, # your conda might not be set up correctly for this code. # create an environment for our pseudomapping with Salmon # this code is &quot;extra&quot; because it only creates env if not already existing. if conda info --envs | grep -q salmon; then echo &quot;environment &#39;salmon&#39; already exists&quot;; else CONDA_SUBDIR=osx-64 conda create -y -n salmon -c conda-forge -c bioconda salmon=1.10.0; fi # the channel priority order above is needed to get a recent version via conda. # see available conda environments conda env list # activate our QC environment conda activate salmon # make sure desired packages are working which salmon # help page for using salmon salmon -h # it&#39;s always good coding practice to deactivate # a conda environment at the end of a chunk conda deactivate 7.4.2 Download transcriptome To make an index for Salmon, we need transcript sequences in the FASTA format. # Define the destination file path # Be sure to change this file path to the path you want your data to go REF_DIR=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/Reference&quot; # make that directory if it doesn&#39;t already mkdir -p $REF_DIR # Define the URL of reference transcriptome # (latest from ensembl) url=&quot;ftp://ftp.ensembl.org/pub/release-110/fasta/saccharomyces_cerevisiae/cdna/Saccharomyces_cerevisiae.R64-1-1.cdna.all.fa.gz&quot; # Check if the file already exists at the destination location if [ ! -f &quot;$REF_DIR/Saccharomyces_cerevisiae.R64-1-1.cdna.all.fa.gz&quot; ]; then echo &quot;Reference transcriptome not found, downloading...&quot; # If the file does not exist, download it using curl curl -o &quot;$REF_DIR/Saccharomyces_cerevisiae.R64-1-1.cdna.all.fa.gz&quot; &quot;$url&quot; echo &quot;Downloading finished&quot; else echo &quot;File already exists at $REF_DIR Skipping download.&quot; fi ## File already exists at /Users/clstacy/Desktop/Genomic_Data_Analysis/Reference Skipping download. 7.4.3 Building the Salmon index Salmon can index by using the command salmon index. A recent feature update to Salmon includes an option to map to decoys, we will use the entire genome as the decoy for our index, because the S. cerevesiae genome is small. You can read more at: https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode. # We need to set a variable for where the transcriptome file is REF_DIR=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/Reference&quot; TRANSCRIPTOME=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/Reference/Saccharomyces_cerevisiae.R64-1-1.cdna.all.fa.gz&quot; GENOME=&quot;/Users/$USER/Desktop/Genomic_Data_Analysis/Reference/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz&quot; # Activate conda salmon environment conda activate salmon # Run a script that generates a decoy.txt file from the genome we downloaded grep &quot;^&gt;&quot; &lt;(gunzip -c $GENOME) | cut -d &quot; &quot; -f 1 &gt; $REF_DIR/decoys.txt sed -i.bak -e &#39;s/&gt;//g&#39; $REF_DIR/decoys.txt # Combine the transcriptome and genome into a single file for indexing cat $TRANSCRIPTOME $GENOME &gt; $REF_DIR/gentrome.fasta.gz # We will use the yeast, but it needs to be indexed by salmon salmon index -t $REF_DIR/gentrome.fasta.gz -d $REF_DIR/decoys.txt -p 4 -i $REF_DIR/index_salmon_Saccharomyces_cerevisiae.R64-1-1 conda deactivate ## Version Info: This is the most recent version of salmon. ## [2023-10-26 12:12:52.539] [jLog] [info] building index ## out : /Users/clstacy/Desktop/Genomic_Data_Analysis/Reference/index_salmon_Saccharomyces_cerevisiae.R64-1-1 ## [2023-10-26 12:12:52.540] [puff::index::jointLog] [info] Running fixFasta ## ## [Step 1 of 4] : counting k-mers ## ## [2023-10-26 12:12:53.052] [puff::index::jointLog] [warning] Removed 41 transcripts that were sequence duplicates of indexed transcripts. ## [2023-10-26 12:12:53.052] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag ## [2023-10-26 12:12:53.053] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides ## [2023-10-26 12:12:53.053] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts ## wrote 6588 cleaned references ## [2023-10-26 12:12:53.150] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers ## [2023-10-26 12:12:53.603] [puff::index::jointLog] [info] ntHll estimated 11513300 distinct k-mers, setting filter size to 2^28 ## Threads = 4 ## Vertex length = 31 ## Hash functions = 5 ## Filter size = 268435456 ## Capacity = 2 ## Files: ## /Users/clstacy/Desktop/Genomic_Data_Analysis/Reference/index_salmon_Saccharomyces_cerevisiae.R64-1-1/ref_k31_fixed.fa ## -------------------------------------------------------------------------------- ## Round 0, 0:268435456 ## Pass Filling Filtering ## 1 2 3 ## 2 1 0 ## True junctions count = 20631 ## False junctions count = 49701 ## Hash table size = 70332 ## Candidate marks count = 194448 ## -------------------------------------------------------------------------------- ## Reallocating bifurcations time: 0 ## True marks count: 93214 ## Edges construction time: 1 ## -------------------------------------------------------------------------------- ## Distinct junctions = 20631 ## ## TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing. ## TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0); ## allowedIn: 14 ## Max Junction ID: 20809 ## seen.size():166481 kmerInfo.size():20810 ## approximateContigTotalLength: 11070364 ## counters for complex kmers: ## (prec&gt;1 &amp; succ&gt;1)=327 | (succ&gt;1 &amp; isStart)=7 | (prec&gt;1 &amp; isEnd)=7 | (isStart &amp; isEnd)=2 ## contig count: 25029 element count: 12321058 complex nodes: 343 ## # of ones in rank vector: 25028 ## [2023-10-26 12:13:01.661] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file. ## [2023-10-26 12:13:01.664] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /Users/clstacy/Desktop/Genomic_Data_Analysis/Reference/index_salmon_Saccharomyces_cerevisiae.R64-1-1 ## size = 12321058 ## ----------------------------------------- ## | Loading contigs | Time = 5.9218 ms ## ----------------------------------------- ## size = 12321058 ## ----------------------------------------- ## | Loading contig boundaries | Time = 3.1299 ms ## ----------------------------------------- ## Number of ones: 25028 ## Number of ones per inventory item: 512 ## Inventory entries filled: 49 ## 25028 ## [2023-10-26 12:13:01.699] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure. ## [2023-10-26 12:13:01.700] [puff::index::jointLog] [info] contig count for validation: 25,028 ## [2023-10-26 12:13:01.708] [puff::index::jointLog] [info] Total # of Contigs : 25,028 ## [2023-10-26 12:13:01.708] [puff::index::jointLog] [info] Total # of numerical Contigs : 25,028 ## [2023-10-26 12:13:01.708] [puff::index::jointLog] [info] Total # of contig vec entries: 88,496 ## [2023-10-26 12:13:01.708] [puff::index::jointLog] [info] bits per offset entry 17 ## [2023-10-26 12:13:01.709] [puff::index::jointLog] [info] Done constructing the contig vector. 25029 ## [2023-10-26 12:13:01.721] [puff::index::jointLog] [info] # segments = 25,028 ## [2023-10-26 12:13:01.721] [puff::index::jointLog] [info] total length = 12,321,058 ## [2023-10-26 12:13:01.723] [puff::index::jointLog] [info] Reading the reference files ... ## [2023-10-26 12:13:01.849] [puff::index::jointLog] [info] positional integer width = 24 ## [2023-10-26 12:13:01.849] [puff::index::jointLog] [info] seqSize = 12,321,058 ## [2023-10-26 12:13:01.849] [puff::index::jointLog] [info] rankSize = 12,321,058 ## [2023-10-26 12:13:01.849] [puff::index::jointLog] [info] edgeVecSize = 0 ## [2023-10-26 12:13:01.849] [puff::index::jointLog] [info] num keys = 11,570,218 ## [Building BooPHF] 0.319% elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 0.425% elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 0.433% elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 0.456% elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 0.668% elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 0.71 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 0.79 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.03 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.09 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.09 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.26 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.26 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.51 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.52 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.61 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.69 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.95 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 1.99 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.04 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.2 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.39 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.43 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.57 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.67 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.75 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.95 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 2.99 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.01 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.06 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.37 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.39 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.41 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.52 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.62 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.7 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.9 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 3.94 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.05 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.17 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.28 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.35 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.4 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.61 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.71 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.78 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 4.83 % elapsed: 0 min 0 sec remaining: 0 min 1 sec [Building BooPHF] 5.03 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.05 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.26 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.36 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.47 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.54 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.59 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.76 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.93 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 5.97 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.02 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.25 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.45 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.51 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.69 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.73 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.77 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 6.95 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.12 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.16 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.21 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.39 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.44 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.48 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.64 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.88 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.92 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 7.97 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.15 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.28 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.35 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.38 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.62 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.66 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.67 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.92 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 8.92 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.02 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.18 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.26 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.33 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.36 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.59 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.66 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.77 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 9.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 10.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 11.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 12.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 13.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 14.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 15.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 16.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 17.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 18.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 19.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 20.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 21.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 22.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 23.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 24.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 25.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 26.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 27.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 28.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 29.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 30.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 31.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 32.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 33.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 34.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 35.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 36.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 37.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 38.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 39.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 40.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 41.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 42.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 43.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 44.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 45.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 46.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 47.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 48.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 49.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 50.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 51.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 52.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 53.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 54.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 55.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 56.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 57.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 58.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 59.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 60.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 61.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 62.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 63.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 64.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 65.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 66.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 67.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 68.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 69.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 70.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 71.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 72.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 73.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 74.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 75.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 76.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 77.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 78.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 79.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 80.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 81.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 82.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 83.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 84.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 85.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 86.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 87.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 88.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 89.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 90.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 91.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.5 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.7 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 92.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.2 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.6 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.8 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 93.9 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 94 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 94.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 94.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 94.1 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 94.3 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 94.4 % elapsed: 0 min 0 sec remaining: 0 min 0 sec [Building BooPHF] 94.6 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 94.6 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 94.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 94.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 94.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.1 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.1 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.4 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.6 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.7 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 95.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.1 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.4 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.7 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 96.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.4 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.7 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 97.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.2 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.3 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.6 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.6 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 98.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.1 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.3 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.3 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.5 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.6 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.6 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.8 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 99.9 % elapsed: 0 min 1 sec remaining: 0 min 0 sec [Building BooPHF] 100 % elapsed: 0 min 1 sec remaining: 0 min 0 sec ## [2023-10-26 12:13:02.402] [puff::index::jointLog] [info] mphf size = 7.22767 MB ## [2023-10-26 12:13:02.411] [puff::index::jointLog] [info] chunk size = 3,080,265 ## [2023-10-26 12:13:02.411] [puff::index::jointLog] [info] chunk 0 = [0, 3,080,282) ## [2023-10-26 12:13:02.411] [puff::index::jointLog] [info] chunk 1 = [3,080,282, 6,160,547) ## [2023-10-26 12:13:02.411] [puff::index::jointLog] [info] chunk 2 = [6,160,547, 9,240,812) ## [2023-10-26 12:13:02.411] [puff::index::jointLog] [info] chunk 3 = [9,240,812, 12,321,028) ## [2023-10-26 12:13:02.916] [puff::index::jointLog] [info] finished populating pos vector ## [2023-10-26 12:13:02.916] [puff::index::jointLog] [info] writing index components ## [2023-10-26 12:13:03.170] [puff::index::jointLog] [info] finished writing dense pufferfish index ## [2023-10-26 12:13:03.174] [jLog] [info] done building index ## for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ## Bitarray 60630080 bits (100.00 %) (array + ranks ) ## final hash 0 bits (0.00 %) (nb in final hash 0) Notice that we combined the fasta file of the transcriptome with the fasta file of the entire genome (in that order) into the gentrome.fasta.gz file which was then indexed. Salmon is a pseudomapper, so it doesn’t create sam/bam files and is instead able to count directly from the fastq files. We will do the pseudomapping and counting all in one step in the next activity. 7.5 Questions 7.5.1 With Rsubread: Question 1: Try aligning the fastq files allowing multi-mapping reads (set unique = FALSE), allowing for up to 6 “best” locations to be reported (nBestLocations = 6), and allow reads to be fractionally counted (fraction = TRUE). Specify the output file names (bam_files_multi) by substituting “.fastq.gz” with “.multi.bam” so we don’t overwrite our unique alignment bam files. # Define the pattern and replacement pattern &lt;- &quot;\\\\.fastq\\\\.gz$&quot; replacement &lt;- &quot;subread.multi.bam&quot; # Create the new file names bam_files_multi &lt;- gsub(pattern, replacement, trimmed_fastq_files) # update this code to run with Rsubread multimapping, as described above. align(index=index_reference_genome, readfile1=trimmed_fastq_files, output_file = ___________, type = &quot;rna&quot;, input_format = &quot;gzFASTQ&quot;, output_format = &quot;BAM&quot;, unique = ____, nBestLocations = ____, nthreads=6 ) Question 2: Look at the proportion of reads mapped and see if we get any more reads mapping by specifying a less stringent criteria. 7.5.2 With Salmon: Question 3: What are the pros and cons of using Salmon vs subread for mapping reads? Be sure to knit this file into a pdf or html file once you’re finished. System information for reproducibility: pander::pander(sessionInfo()) R version 4.3.1 (2023-06-16) Platform: aarch64-apple-darwin20 (64-bit) locale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8 attached base packages: stats4, stats, graphics, grDevices, utils, datasets, methods and base other attached packages: Rsubread(v.2.14.2), ShortRead(v.1.58.0), GenomicAlignments(v.1.36.0), SummarizedExperiment(v.1.30.2), MatrixGenerics(v.1.12.3), matrixStats(v.1.0.0), Rsamtools(v.2.16.0), GenomicRanges(v.1.52.1), Biostrings(v.2.68.1), GenomeInfoDb(v.1.36.4), XVector(v.0.40.0), BiocParallel(v.1.34.2), Rfastp(v.1.10.0), org.Sc.sgd.db(v.3.17.0), AnnotationDbi(v.1.62.2), IRanges(v.2.34.1), S4Vectors(v.0.38.2), Biobase(v.2.60.0), BiocGenerics(v.0.46.0), clusterProfiler(v.4.8.2), ggVennDiagram(v.1.2.3), tidytree(v.0.4.5), igraph(v.1.5.1), janitor(v.2.2.0), BiocManager(v.1.30.22), pander(v.0.6.5), knitr(v.1.44), here(v.1.0.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.0), dplyr(v.1.1.3), purrr(v.1.0.2), readr(v.2.1.4), tidyr(v.1.3.0), tibble(v.3.2.1), ggplot2(v.3.4.4), tidyverse(v.2.0.0) and pacman(v.0.5.1) loaded via a namespace (and not attached): RColorBrewer(v.1.1-3), rstudioapi(v.0.15.0), jsonlite(v.1.8.7), magrittr(v.2.0.3), farver(v.2.1.1), rmarkdown(v.2.25), fs(v.1.6.3), zlibbioc(v.1.46.0), vctrs(v.0.6.4), memoise(v.2.0.1), RCurl(v.1.98-1.12), ggtree(v.3.8.2), S4Arrays(v.1.0.6), htmltools(v.0.5.6.1), gridGraphics(v.0.5-1), sass(v.0.4.7), bslib(v.0.5.1), plyr(v.1.8.9), cachem(v.1.0.8), lifecycle(v.1.0.3), pkgconfig(v.2.0.3), Matrix(v.1.6-1.1), R6(v.2.5.1), fastmap(v.1.1.1), gson(v.0.1.0), GenomeInfoDbData(v.1.2.10), snakecase(v.0.11.1), digest(v.0.6.33), aplot(v.0.2.2), enrichplot(v.1.20.0), colorspace(v.2.1-0), patchwork(v.1.1.3), rprojroot(v.2.0.3), RSQLite(v.2.3.1), hwriter(v.1.3.2.1), fansi(v.1.0.5), timechange(v.0.2.0), abind(v.1.4-5), httr(v.1.4.7), polyclip(v.1.10-6), compiler(v.4.3.1), bit64(v.4.0.5), withr(v.2.5.1), downloader(v.0.4), viridis(v.0.6.4), DBI(v.1.1.3), ggforce(v.0.4.1), MASS(v.7.3-60), DelayedArray(v.0.26.7), rjson(v.0.2.21), HDO.db(v.0.99.1), tools(v.4.3.1), ape(v.5.7-1), scatterpie(v.0.2.1), glue(v.1.6.2), nlme(v.3.1-163), GOSemSim(v.2.26.1), grid(v.4.3.1), shadowtext(v.0.1.2), reshape2(v.1.4.4), fgsea(v.1.26.0), generics(v.0.1.3), gtable(v.0.3.4), tzdb(v.0.4.0), data.table(v.1.14.8), hms(v.1.1.3), tidygraph(v.1.2.3), utf8(v.1.2.3), ggrepel(v.0.9.4), pillar(v.1.9.0), yulab.utils(v.0.1.0), splines(v.4.3.1), tweenr(v.2.0.2), treeio(v.1.24.3), lattice(v.0.21-9), deldir(v.1.0-9), bit(v.4.0.5), tidyselect(v.1.2.0), GO.db(v.3.17.0), gridExtra(v.2.3), bookdown(v.0.36), xfun(v.0.40), graphlayouts(v.1.0.1), stringi(v.1.7.12), lazyeval(v.0.2.2), ggfun(v.0.1.3), yaml(v.2.3.7), evaluate(v.0.22), codetools(v.0.2-19), interp(v.1.1-4), ggraph(v.2.1.0), qvalue(v.2.32.0), RVenn(v.1.1.0), ggplotify(v.0.1.2), cli(v.3.6.1), munsell(v.0.5.0), jquerylib(v.0.1.4), Rcpp(v.1.0.11), png(v.0.1-8), parallel(v.4.3.1), blob(v.1.2.4), jpeg(v.0.1-10), latticeExtra(v.0.6-30), DOSE(v.3.26.1), bitops(v.1.0-7), viridisLite(v.0.4.2), scales(v.1.2.1), crayon(v.1.5.2), rlang(v.1.1.1), cowplot(v.1.1.1), fastmatch(v.1.1-4) and KEGGREST(v.1.40.1) "]]
